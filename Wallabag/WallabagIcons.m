//
//  WallabagIcons.m
//  wallabag for iOS
//
//  Created by (null) on 26.07.14.
//  Copyright (c) 2014 (null). All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "WallabagIcons.h"


@implementation WallabagIcons

#pragma mark Cache

static UIColor* _tintColor = nil;

#pragma mark Initialization

+ (void)initialize
{
    // Colors Initialization
    _tintColor = [UIColor colorWithRed: 0 green: 0.608 blue: 1 alpha: 1];

}

#pragma mark Colors

+ (UIColor*)tintColor { return _tintColor; }

#pragma mark Drawing Methods

+ (void)drawToolbarUnreadWithFrame: (CGRect)frame;
{

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(CGRectGetMinX(frame) + 14, CGRectGetMinY(frame) + 14, CGRectGetWidth(frame) - 28, CGRectGetHeight(frame) - 28)];
    [WallabagIcons.tintColor setFill];
    [ovalPath fill];
    [WallabagIcons.tintColor setStroke];
    ovalPath.lineWidth = 2;
    [ovalPath stroke];
}

+ (void)drawToolbarReadWithFrame: (CGRect)frame;
{

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(CGRectGetMinX(frame) + 14, CGRectGetMinY(frame) + 14, CGRectGetWidth(frame) - 28, CGRectGetHeight(frame) - 28)];
    [WallabagIcons.tintColor setStroke];
    ovalPath.lineWidth = 2;
    [ovalPath stroke];
}

+ (void)drawChangeThemeWithFrame: (CGRect)frame;
{

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(CGRectGetMinX(frame) + 10, CGRectGetMinY(frame) + 10, CGRectGetWidth(frame) - 20, CGRectGetHeight(frame) - 20)];
    [WallabagIcons.tintColor setStroke];
    ovalPath.lineWidth = 2;
    [ovalPath stroke];


    //// Bezier Drawing
    UIBezierPath* bezierPath = UIBezierPath.bezierPath;
    [bezierPath moveToPoint: CGPointMake(CGRectGetMinX(frame) + 30.49, CGRectGetMinY(frame) + 13.51)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 30.49, CGRectGetMinY(frame) + 30.49) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 35.17, CGRectGetMinY(frame) + 18.2) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 35.17, CGRectGetMinY(frame) + 25.8)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 22, CGRectGetMinY(frame) + 34) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 28.14, CGRectGetMinY(frame) + 32.83) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 25.07, CGRectGetMinY(frame) + 34)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 22, CGRectGetMinY(frame) + 10) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 22, CGRectGetMinY(frame) + 26.82) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 22, CGRectGetMinY(frame) + 17.18)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 30.49, CGRectGetMinY(frame) + 13.51) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 25.07, CGRectGetMinY(frame) + 10) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 28.14, CGRectGetMinY(frame) + 11.17)];
    [bezierPath closePath];
    [WallabagIcons.tintColor setFill];
    [bezierPath fill];
}

#pragma mark Generated Images

+ (UIImage*)imageOfToolbarUnreadWithFrame: (CGRect)frame;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(44, 44), NO, 0.0f);
    [WallabagIcons drawToolbarUnreadWithFrame: frame];
    UIImage* imageOfToolbarUnread = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfToolbarUnread;
}

+ (UIImage*)imageOfToolbarReadWithFrame: (CGRect)frame;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(44, 44), NO, 0.0f);
    [WallabagIcons drawToolbarReadWithFrame: frame];
    UIImage* imageOfToolbarRead = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfToolbarRead;
}

+ (UIImage*)imageOfChangeThemeWithFrame: (CGRect)frame;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(44, 44), NO, 0.0f);
    [WallabagIcons drawChangeThemeWithFrame: frame];
    UIImage* imageOfChangeTheme = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfChangeTheme;
}

@end
