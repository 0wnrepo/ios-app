//
//  WALIcons.m
//  wallabag for iOS
//
//  Created by (null) on 26.07.14.
//  Copyright (c) 2014 (null). All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "WALIcons.h"


@implementation WALIcons

#pragma mark Cache

static UIColor* _tintColor = nil;

static UIImage* _imageOfToolbarUnread = nil;
static UIImage* _imageOfToolbarRead = nil;
static UIImage* _imageOfToolbarChangeTheme = nil;
static UIImage* _imageOfToolbarActions = nil;
static UIImage* _imageOfNavbarList = nil;

#pragma mark Initialization

+ (void)initialize
{
    // Colors Initialization
    _tintColor = [UIColor colorWithRed: 0 green: 0.608 blue: 1 alpha: 1];

}

#pragma mark Colors

+ (UIColor*)tintColor { return _tintColor; }

#pragma mark Drawing Methods

+ (void)drawToolbarUnread;
{

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(14, 14, 16, 16)];
    [WALIcons.tintColor setFill];
    [ovalPath fill];
    [WALIcons.tintColor setStroke];
    ovalPath.lineWidth = 2;
    [ovalPath stroke];
}

+ (void)drawToolbarRead;
{

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(14, 14, 16, 16)];
    [WALIcons.tintColor setStroke];
    ovalPath.lineWidth = 2;
    [ovalPath stroke];
}

+ (void)drawToolbarChangeTheme;
{

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(10, 10, 24, 24)];
    [WALIcons.tintColor setStroke];
    ovalPath.lineWidth = 2;
    [ovalPath stroke];


    //// Bezier Drawing
    UIBezierPath* bezierPath = UIBezierPath.bezierPath;
    [bezierPath moveToPoint: CGPointMake(30.49, 13.51)];
    [bezierPath addCurveToPoint: CGPointMake(30.49, 30.49) controlPoint1: CGPointMake(35.17, 18.2) controlPoint2: CGPointMake(35.17, 25.8)];
    [bezierPath addCurveToPoint: CGPointMake(22, 34) controlPoint1: CGPointMake(28.14, 32.83) controlPoint2: CGPointMake(25.07, 34)];
    [bezierPath addCurveToPoint: CGPointMake(22, 10) controlPoint1: CGPointMake(22, 26.82) controlPoint2: CGPointMake(22, 17.18)];
    [bezierPath addCurveToPoint: CGPointMake(30.49, 13.51) controlPoint1: CGPointMake(25.07, 10) controlPoint2: CGPointMake(28.14, 11.17)];
    [bezierPath closePath];
    [WALIcons.tintColor setFill];
    [bezierPath fill];
}

+ (void)drawToolbarActions;
{

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(9, 19, 6, 6)];
    [WALIcons.tintColor setFill];
    [ovalPath fill];


    //// Oval 2 Drawing
    UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(19, 19, 6, 6)];
    [WALIcons.tintColor setFill];
    [oval2Path fill];


    //// Oval 3 Drawing
    UIBezierPath* oval3Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(29, 19, 6, 6)];
    [WALIcons.tintColor setFill];
    [oval3Path fill];
}

+ (void)drawNavbarList;
{

    //// Rectangle Drawing
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(8, 12, 28, 4) cornerRadius: 2];
    [WALIcons.tintColor setFill];
    [rectanglePath fill];


    //// Rectangle 2 Drawing
    UIBezierPath* rectangle2Path = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(8, 20, 28, 4) cornerRadius: 2];
    [WALIcons.tintColor setFill];
    [rectangle2Path fill];


    //// Rectangle 3 Drawing
    UIBezierPath* rectangle3Path = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(8, 28, 28, 4) cornerRadius: 2];
    [WALIcons.tintColor setFill];
    [rectangle3Path fill];
}

#pragma mark Generated Images

+ (UIImage*)imageOfToolbarUnread;
{
    if (_imageOfToolbarUnread)
        return _imageOfToolbarUnread;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(44, 44), NO, 0.0f);
    [WALIcons drawToolbarUnread];
    _imageOfToolbarUnread = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfToolbarUnread;
}

+ (UIImage*)imageOfToolbarRead;
{
    if (_imageOfToolbarRead)
        return _imageOfToolbarRead;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(44, 44), NO, 0.0f);
    [WALIcons drawToolbarRead];
    _imageOfToolbarRead = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfToolbarRead;
}

+ (UIImage*)imageOfToolbarChangeTheme;
{
    if (_imageOfToolbarChangeTheme)
        return _imageOfToolbarChangeTheme;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(44, 44), NO, 0.0f);
    [WALIcons drawToolbarChangeTheme];
    _imageOfToolbarChangeTheme = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfToolbarChangeTheme;
}

+ (UIImage*)imageOfToolbarActions;
{
    if (_imageOfToolbarActions)
        return _imageOfToolbarActions;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(44, 44), NO, 0.0f);
    [WALIcons drawToolbarActions];
    _imageOfToolbarActions = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfToolbarActions;
}

+ (UIImage*)imageOfNavbarList;
{
    if (_imageOfNavbarList)
        return _imageOfNavbarList;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(44, 44), NO, 0.0f);
    [WALIcons drawNavbarList];
    _imageOfNavbarList = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfNavbarList;
}

#pragma mark Customization Infrastructure

- (void)setToolbarUnreadTargets: (NSArray*)toolbarUnreadTargets
{
    _toolbarUnreadTargets = toolbarUnreadTargets;

    for (id target in self.toolbarUnreadTargets)
        [target setImage: WALIcons.imageOfToolbarUnread];
}

- (void)setToolbarReadTargets: (NSArray*)toolbarReadTargets
{
    _toolbarReadTargets = toolbarReadTargets;

    for (id target in self.toolbarReadTargets)
        [target setImage: WALIcons.imageOfToolbarRead];
}

- (void)setToolbarChangeThemeTargets: (NSArray*)toolbarChangeThemeTargets
{
    _toolbarChangeThemeTargets = toolbarChangeThemeTargets;

    for (id target in self.toolbarChangeThemeTargets)
        [target setImage: WALIcons.imageOfToolbarChangeTheme];
}

- (void)setToolbarActionsTargets: (NSArray*)toolbarActionsTargets
{
    _toolbarActionsTargets = toolbarActionsTargets;

    for (id target in self.toolbarActionsTargets)
        [target setImage: WALIcons.imageOfToolbarActions];
}

- (void)setNavbarListTargets: (NSArray*)navbarListTargets
{
    _navbarListTargets = navbarListTargets;

    for (id target in self.navbarListTargets)
        [target setImage: WALIcons.imageOfNavbarList];
}


@end
